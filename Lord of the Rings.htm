<!DOCTYPE html>
<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Lord of the Rings</title>
  <style>
    body {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
      background-color: #f5f5f5;
    }

    .content {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 20px;
    }

    #container {
      position: relative;
      width: 226px;
      height: 348px;
      overflow: hidden;
      border: 2px solid #333;
      cursor: pointer;
    }

    #image {
      width: 100%;
      height: 100%;
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      grid-template-rows: repeat(3, 1fr);
    }

    .grid-area {
      width: 100%;
      height: 100%;
      border: 1px solid rgba(255, 255, 255, 0.5);
      transition: transform 0.5s ease;
    }

    .zoomed {
      position: absolute;
      width: 300%;
      height: 300%;
      transform-origin: top left;
      transition: transform 0.5s ease;
    }

    #cardDisplay {
      width: 226px;
      height: auto;
      border: 2px solid #333;
      cursor: pointer;
      display: none;
      /* Hide card display initially */
      animation: none;
      /* Default state with no animation */
    }

    /* Card pop-up animation */
    @keyframes drawCardAnimation {
      0% {
        transform: scale(0.8);
        opacity: 0.5;
      }

      60% {
        transform: scale(1.1);
        opacity: 1;
      }

      100% {
        transform: scale(1);
      }
    }

    #drawButton {
      padding: 10px 20px;
      font-size: 16px;
      cursor: pointer;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 5px;
      transition: background-color 0.3s ease;
    }

    #drawButton:hover {
      background-color: #45a049;
    }
  </style>
</head>

<body>

  <div class="content">
    <div id="container">
      <img id="image" src="assets/characters.png" alt="Grid Image">
    </div>
    <button id="drawButton">Draw First Card</button>
    <img id="cardDisplay" src="" alt="Card Display">
  </div>

  <script>
    function createDeck() {
      let deck = [];
      for (let i = 1; i <= 12; i++) {
        deck.push(i);
      }
      return deck;
    }

    function shuffleDeck(deck) {
      for (let i = deck.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [deck[i], deck[j]] = [deck[j], deck[i]];
      }
    }

    function drawCard(deck) {
      return deck.pop();
    }

    let deck;

    document.addEventListener('DOMContentLoaded', () => {
      deck = createDeck();
      shuffleDeck(deck);

      const cardDisplay = document.getElementById('cardDisplay');
      const drawButton = document.getElementById('drawButton');
      const container = document.getElementById('container');
      const image = document.getElementById('image');
      const gridSize = 3;

      drawButton.addEventListener('click', () => {
        if (deck.length === 0) {
          reshuffleDeck();
        } else {
          drawNewCard();
        }
      });

      cardDisplay.addEventListener('click', () => {
        drawNewCard();
      });

      function drawNewCard() {
        let card = drawCard(deck);
        if (card) {
          let imagePath = `img/Card_${card}.png`;
          cardDisplay.src = imagePath;
          cardDisplay.alt = `Card ${card}`;
          cardDisplay.style.display = "block"; // Show card display
          cardDisplay.style.animation = "none"; // Reset animation
          void cardDisplay.offsetWidth; // Trigger reflow to restart animation
          cardDisplay.style.animation = "drawCardAnimation 0.6s ease"; // Apply animation
          drawButton.textContent = "Draw Next Card";
        } else {
          cardDisplay.style.display = "none"; // Hide card display if no more cards
          drawButton.textContent = "Reshuffle Deck";
        }
      }

      function reshuffleDeck() {
        deck = createDeck();
        shuffleDeck(deck);
        drawButton.textContent = "Draw First Card";
        cardDisplay.style.display = "none"; // Hide the card display until a new card is drawn
      }

      container.addEventListener('click', (event) => {
        const { offsetX, offsetY } = event;
        const sectionWidth = container.clientWidth / gridSize;
        const sectionHeight = container.clientHeight / gridSize;

        const column = Math.floor(offsetX / sectionWidth);
        const row = Math.floor(offsetY / sectionHeight);

        const xPercent = (100 / (gridSize - 1)) * column * 2;
        const yPercent = (100 / (gridSize - 1)) * row * 2;

        image.classList.toggle('zoomed');
        image.style.transform = image.classList.contains('zoomed')
          ? `translate(-${xPercent}%, -${yPercent}%) scale(3)`
          : '';
      });
    });
  </script>


</body>

</html>
